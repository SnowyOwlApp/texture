<?xml version="1.0" encoding="utf-8"?>
<grammar xmlns="http://relaxng.org/ns/structure/1.0" xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
  <include href="JATS-archiving.rng"/>

  <define name="abstract">
    <element name="abstract">
      <ref name="abstract-attlist"/>
      <zeroOrMore>
        <ref name="p"/>
      </zeroOrMore>
    </element>
  </define>


  <define name="body">
    <element name="body">
      <ref name="body-attlist"/>
      <zeroOrMore>
        <choice>
          <ref name="sec.class"/>
          <ref name="para-level"/>
          <ref name="cell"/>
          <ref name="repro-fig"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>  

  <define name="article-meta">
    <element name="article-meta">
      <ref name="article-meta-attlist"/>
      <zeroOrMore>
        <ref name="article-id"/>
      </zeroOrMore>
      <optional>
        <ref name="article-categories"/>
      </optional>
      <optional>
        <ref name="title-group"/>
      </optional>
      <!-- we support 0..2 contrib groups, one for authors, one for editors -->
      <optional>
        <ref name="contrib-group"/>
      </optional>
      <optional>
        <ref name="contrib-group"/>
      </optional>
      <zeroOrMore>
        <ref name="aff"/>
      </zeroOrMore>
      <optional>
        <ref name="author-notes"/>
      </optional>
      <!-- Should we limit this and be more explicit -->
      <zeroOrMore>
        <ref name="pub-date"/>
      </zeroOrMore>
      <optional>
        <ref name="volume"/>
      </optional>
      <optional>
        <ref name="issue"/>
      </optional>
      <optional>
        <ref name="isbn"/>
      </optional>
      <optional>
        <choice>
          <group>
            <optional>
              <ref name="fpage"/>
              <optional>
                <ref name="lpage"/>
              </optional>
            </optional>
            <optional>
              <ref name="page-range"/>
            </optional>
          </group>
          <ref name="elocation-id"/>
        </choice>
      </optional>
      <optional>
        <ref name="history"/>
      </optional>
      <optional>
        <ref name="permissions"/>
      </optional>
      <zeroOrMore>
        <ref name="self-uri"/>
      </zeroOrMore>
      <!-- Verify the use-cases for related article? Maybe this should not be
           part of the source, and instead be included in a post-processing step
           at journals, so database of related articles can be maintained separately
      -->
      <zeroOrMore>
        <ref name="related-article"/>
        <ref name="related-object"/>
      </zeroOrMore>
      <optional>
        <ref name="abstract"/>
      </optional>
      <zeroOrMore>
        <ref name="trans-abstract"/>
      </zeroOrMore>
      <zeroOrMore>
        <ref name="kwd-group"/>
      </zeroOrMore>
      <zeroOrMore>
        <ref name="funding-group"/>
      </zeroOrMore>
      <zeroOrMore>
        <ref name="conference"/>
      </zeroOrMore>
      <!-- needs specification -->
      <optional>
        <ref name="counts"/>
      </optional>
      <optional>
        <ref name="custom-meta-group"/>
      </optional>
    </element>
  </define>

  <!--
    WIP: it should be clear how to use this.
      There is no example showing use of <def>.
      If required it should not be 'somewhere', but
      following a convention.
      For now we deactivated <def>
  -->

  <define name="abbrev-elements">
    <empty />
  </define>

  <define name="addr-line-elements">
    <choice>
      <ref name="simple-text"/>
      <!-- <ref name="address-line.class"/> -->
    </choice>
  </define>

  <!--
    WIP: we want this be used as a structured element only
  -->
  <define name="aff">
    <element name="aff">
      <ref name="aff-attlist"/>
      <interleave>
        <zeroOrMore><ref name="addr-line"/></zeroOrMore>
        <optional><ref name="label"/></optional>
        <optional><ref name="city"/></optional>
        <optional><ref name="country"/></optional>
        <optional><ref name="fax"/></optional>
        <zeroOrMore><ref name="institution"/></zeroOrMore>
        <zeroOrMore><ref name="institution-wrap"/></zeroOrMore>
        <optional><ref name="phone"/></optional>
        <optional><ref name="postal-code"/></optional>
        <optional><ref name="state"/></optional>
        <optional><ref name="email"/></optional>
        <zeroOrMore><ref name="ext-link"/></zeroOrMore>
        <optional><ref name="uri"/></optional>
        <optional><ref name="uri"/></optional>
        <zeroOrMore><ref name="x"/></zeroOrMore>
      </interleave>
    </element>
  </define>

  <!-- in TextureArticle we want to have simpler phrase content -->
  <define name="all-phrase">
    <choice>
      <ref name="simple-phrase"/>
      <ref name="x.class"/>
    </choice>
  </define>

  <define name="caption">
    <element name="caption">
      <ref name="caption-attlist"/>
      <optional>
        <ref name="title"/>
      </optional>
      <zeroOrMore>
        <ref name="p"/>
      </zeroOrMore>
    </element>
  </define>

  <!--
    WIP: is it possible to avoid <email> and <uri>?
  -->

  <define name="code-elements">
    <choice>
      <ref name="ext-link"/>
      <ref name="emphasis.class"/>
      <ref name="phrase.class"/>
      <ref name="simple-link.class"/>
      <ref name="subsup.class"/>
    </choice>
  </define>

  <!--
    Used for modelling group authors:

  <contrib contrib-type="group" equal-contrib="yes" corresp="no" deceased="no">
    <collab>
      <named-content content-type="name">The Mouse Genome Sequencing Consortium</named-content>
      <xref ref-type="aff" rid="aff2"/>
      <xref ref-type="award" rid="fund1" />
      <contrib-group contrib-type="group-member">
        <contrib contrib-type="person">
          <name>
            <surname>Kelly</surname><given-names>Laura A.</given-names>
          </name>
          <role>Writing Group</role>
          <xref ref-type="aff" rid="aff2"/>
        </contrib>
        <contrib contrib-type="person">
          <name>
            <surname>Randall</surname><given-names>Daniel Lee</given-names>
            <suffix>Jr.</suffix>
          </name>
          <role>Lab Group</role>
          <xref ref-type="aff" rid="aff3"/>
        </contrib>
      </contrib-group>
    </collab>
  </contrib>
  -->
  <define name="collab">
    <element name="collab">
      <ref name="collab-attlist"/>
      <interleave>
        <optional><ref name="email"/></optional>
        <ref name="named-content"/>
        <optional><ref name="contrib-group"/></optional>
        <zeroOrMore><ref name="xref"/></zeroOrMore>
      </interleave>
    </element>
  </define>




  <!--
    WIP We need a guideline to be clear if the content
    should be textual or structured.

    Looking at Scielo guideline this seems to be textual.
    We want to go into a direction, where this not used mixed.

    TODO: specify requirements
  -->
  <define name="conf-loc">
    <element name="conf-loc">
      <ref name="conf-loc-attlist"/>
      <zeroOrMore>
        <choice>
          <text/>
          <!-- for now we only allow plain text -->
          <!-- <ref name="address.class"/> -->
        </choice>
      </zeroOrMore>
    </element>
  </define>

  <!--
    Restricting to the minimum, see JATS4M spec
  -->
  <define name="contrib">
    <element name="contrib">
      <ref name="contrib-attlist"/>
      <interleave>
        <!-- TODO: contrib-id[contrib-id-type=orcid]?, contrib-id[contrib-id-type=entity]? -->
        <zeroOrMore><ref name="contrib-id"/></zeroOrMore>
        <optional><ref name="name"/></optional>
        <optional><ref name="email"/></optional>
        <optional><ref name="collab"/></optional>
        <optional><ref name="role"/></optional>
        <zeroOrMore><ref name="xref"/></zeroOrMore>
      </interleave>
    </element>
  </define>

  <define name="contrib-group">
    <element name="contrib-group">
      <ref name="contrib-group-attlist"/>
      <oneOrMore>
        <ref name="contrib"/>
      </oneOrMore>
    </element>
  </define>

  <!--
    WIP: Requirements are not clear.

    SciELO's guideline has an example with text, optional label, and <email>.

    TODO: support for label
    TODO: refine requirements
  -->
  <define name="corresp">
    <element name="corresp">
      <ref name="corresp-attlist"/>
      <zeroOrMore>
        <choice>
          <text />
          <ref name="all-phrase"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>

  <!--
    Use this only as structured element
  -->
  <define name="date-in-citation">
    <element name="date-in-citation">
      <ref name="date-in-citation-attlist"/>
      <zeroOrMore>
        <choice>
          <ref name="date-parts.class"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>

  <!--
    In JATS disp-formula is lacking of a defined structure.

    <define name="disp-formula-model">
      <zeroOrMore>
        <choice>
          <text/>
          <ref name="disp-formula-elements"/>
        </choice>
      </zeroOrMore>
    </define>

    With TextureArticle we will try to introduce a restrictive yet expressive
    schema.

    TODO: add transformation
  -->
  <define name="disp-formula">
    <element name="disp-formula">
      <!-- attributes -->
      <ref name="disp-formula-attlist"/>
      <!-- elements -->
      <optional>
        <ref name="label"/>
      </optional>
      <optional>
        <ref name="abstract"/>
      </optional>
      <optional>
        <ref name="abstract"/>
      </optional>
      <!-- TODO: quantity? -->
      <zeroOrMore>
        <ref name="access.class"/>
      </zeroOrMore>
      <optional>
        <ref name="kwd-group"/>
      </optional>
      <optional>
        <ref name="attrib"/>
      </optional>
      <optional>
        <ref name="permissions"/>
      </optional>
      <choice>
        <ref name="alternatives"/>
        <ref name="code"/>
        <ref name="math.class"/>
        <ref name="graphic"/>
        <ref name="preformat"/>
      </choice>
    </element>
  </define>

  <!--
    Changes:
      - Only allow para-level elements followed by an optional <attrib> element
  -->
  <define name="disp-quote">
    <element name="disp-quote">
      <ref name="disp-quote-attlist"/><!-- use original attributes -->
      <oneOrMore><ref name="p"/></oneOrMore>
      <optional><ref name="attrib"/></optional>
    </element>
  </define>

  <!--
    We develop the element citation incrementally, we only enable tags that can be
    edited through the user interface so far. This is why many elements are
    commented out.

    NOTE: This must be kept in sync with InternalArticle.rng
  -->
  <define name="element-citation">
    <element name="element-citation">
      <ref name="element-citation-attlist"/>
      <interleave>
        <optional><ref name="article-title"/></optional>
        <optional><ref name="chapter-title"/></optional>
        <optional><ref name="comment"/></optional>
        <optional><ref name="collab"/></optional>
        <optional><ref name="edition"/></optional>
        <optional><ref name="elocation-id"/></optional>
        <optional><ref name="fpage"/></optional>
        <optional><ref name="issue"/></optional>
        <optional><ref name="lpage"/></optional>
        <optional><ref name="page-range"/></optional>
        <!--
          TODO: specify different available person-groups per publication type
        -->
        <zeroOrMore>
          <ref name="person-group"/>
        </zeroOrMore>
        <!--
          TODO: specify different available pub-id-types per publication type
        -->
        <zeroOrMore>
          <ref name="pub-id"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="publisher-loc"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="publisher-name"/>
        </zeroOrMore>
        <optional><ref name="source"/></optional>
        <optional><ref name="volume"/></optional>
        <optional><ref name="year"/></optional>
        <optional><ref name="month"/></optional>
        <optional><ref name="day"/></optional>

        <optional><ref name="conf-name"/></optional>
        <optional><ref name="conf-loc"/></optional>
        <optional><ref name="data-title"/></optional>
        <optional><ref name="part-title"/></optional>
        <optional><ref name="patent"/></optional>
        <optional><ref name="series"/></optional>
        <optional><ref name="version"/></optional>
        <optional><ref name="uri"/></optional>
      </interleave>
    </element>
  </define>

  <define name="elocation-id">
    <element name="elocation-id">
      <ref name="elocation-id-attlist"/>
      <optional><text/></optional>
    </element>
  </define>

  <define name="fig">
    <element name="fig">
      <ref name="fig-attlist"/>
      <!-- We allow only one object-id[pub-id-type=doi] -->
      <optional><ref name="object-id"/></optional>
      <optional>
        <ref name="label"/>
      </optional>
      <optional>
        <ref name="caption"/>
      </optional>
      <!-- Only used to carry source code for reproducible figures -->
      <optional>
        <ref name="alternatives"/>
      </optional>
      <!-- Only optional to allow repro figs without graphic element -->
      <optional>
        <ref name="graphic"/>
      </optional>
    </element>
  </define>

  <define name="fn">
    <element name="fn">
      <oneOrMore>
        <ref name="p"/>
      </oneOrMore>
    </element>
  </define>

  <define name="fpage">
    <element name="fpage">
      <optional><text/></optional>
    </element>
  </define>

  <define name="funding-source">
    <element name="funding-source">
      <ref name="funding-source-attlist"/>
      <ref name="institution-wrap"/>
    </element>
  </define>

  <define name="graphic">
    <element name="graphic">
      <ref name="graphic-attlist"/>
    </element>
  </define>

  <define name="history">
    <element name="history">
      <ref name="history-attlist"/>
      <zeroOrMore>
        <ref name="date"/>
      </zeroOrMore>
    </element>
  </define>

  <!--
    WIP: We should make it crystal clear how to tag content
    for different use-cases.

    Proposal:
      - allow only one content element
      - use alternatives if there are alternative representations,
        e.g., an image and MathML
      - use <styled-content> as wrapper for formatted content
    TODO: Note, that the is inconsistent because it requires to use
    <inline-graphic> if used singular, and <graphic> if used as alternative.

    TODO: collect requirements
    TODO: transformation
  -->
  <define name="inline-formula">
    <element name="inline-formula">
      <!-- attributes -->
      <ref name="inline-formula-attlist"/>
      <!-- elements -->
      <ref name="tex-math"/>
    </element>
  </define>

  <!--
    We want to get rid of this, as it is already possible to use
    <supplementary-material> and link to with <xref>.
  -->
  <define name="inline-supplementary-material">
    <element name="inline-supplementary-material">
      <ref name="inline-supplementary-material-attlist"/>
      <zeroOrMore>
        <choice>
          <text/>
          <ref name="simple-phrase"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>

  <define name="issue">
    <element name="issue">
      <ref name="issue-attlist"/>
      <optional><text/></optional>
    </element>
  </define>

  <define name="lpage">
    <element name="lpage">
      <optional><text/></optional>
    </element>
  </define>

  <define name="media">
    <element name="media">
      <ref name="media-attlist"/>
      <optional><ref name="object-id"/></optional>
      <optional>
        <ref name="label"/>
      </optional>
      <optional>
        <ref name="caption"/>
      </optional>
    </element>
  </define>


  <!--
    We try to only allow text in named-content, as this would be the purest form. Let's see if we need
    to allow more.
  -->
  <define name="named-content">
    <element name="named-content">
      <ref name="named-content-attlist"/>
      <text/>
    </element>
  </define>

  <!--
    Changes:
      - Removed all block level elements
      - Removed citations
      - Removed direct usage of math
      - Removed <related-object>, <related-article> to be defined inline

    Transformation:
      - pull block-level elements one level higher

    TODO:
      - transformation: put citations into ref-list
  -->
  <define name="p-elements">
    <choice>
      <ref name="address-link.class"/>
      <!-- <ref name="article-link.class"/> -->
      <ref name="inline-supplementary-material"/>
      <!--<ref name="block-display.class"/>-->
      <!--<ref name="block-math.class"/>-->
      <!--<ref name="citation.class"/>-->
      <ref name="emphasis.class"/>
      <ref name="funding.class"/>
      <ref name="inline-math.class"/>
      <ref name="inline-display-noalt.class"/>
      <!--<ref name="list.class"/>-->
      <!--<ref name="math.class"/>-->
      <ref name="phrase.class"/>
      <!-- <ref name="rest-of-para.class"/> -->
      <ref name="simple-link.class"/>
      <ref name="subsup.class"/>
    </choice>
  </define>

  <!--
    Changes:
      - removed math.class
      - removed related-article

    TODO: provide transformation
  -->
  <define name="para-level">
    <choice>
      <ref name="block-display.class"/>
      <ref name="block-math.class"/>
      <ref name="list.class"/>
      <!--<ref name="math.class"/>-->
      <ref name="nothing-but-para.class"/>
      <!-- <ref name="related-article.class"/> -->
      <ref name="rest-of-para.class"/>
    </choice>
  </define>

  <define name="page-range">
    <element name="page-range">
      <optional><text/></optional>
    </element>
  </define>

  <!--
    WIP: can we use this purely structured ?
  -->
  <define name="person-group-model">
    <zeroOrMore>
      <choice>
        <!-- <text/> -->
        <ref name="person-group-elements"/>
      </choice>
    </zeroOrMore>
  </define>

  <!--
    WIP: Needs requirements
      For now we will allow just formatted content
  -->

  <define name="preformat-elements">
    <choice>
      <!-- <ref name="access.class"/> -->
      <!-- <ref name="address-link.class"/> -->
      <!-- <ref name="display-back-matter.class"/> -->
      <ref name="emphasis.class"/>
      <ref name="phrase.class"/>
      <ref name="subsup.class"/>
    </choice>
  </define>

  <!--
    WIP: use this structured only
  -->
  <define name="product">
    <element name="product">
      <ref name="product-attlist"/>
      <zeroOrMore>
        <ref name="product-elements"/>
      </zeroOrMore>
    </element>
  </define>

  <define name="product-elements">
    <choice>
      <!-- <ref name="article-link.class"/> -->
      <!-- <ref name="break.class"/> -->
      <!-- <ref name="emphasis.class"/> -->
      <!-- <ref name="inline-display.class"/> -->
      <!-- <ref name="inline-math.class"/> -->
      <!-- <ref name="phrase.class"/> -->
      <ref name="price.class"/>
      <ref name="references.class"/>
      <!-- <ref name="simple-link.class"/> -->
      <ref name="xref"/>
      <!-- <ref name="subsup.class"/> -->
    </choice>
  </define>

  <define name="publisher-loc">
    <element name="publisher-loc">
      <ref name="publisher-loc-attlist"/>
      <optional><text/></optional>
    </element>
  </define>

  <define name="publisher-name">
    <element name="publisher-name">
      <ref name="publisher-name-attlist"/>
      <optional><text/></optional>
    </element>
  </define>

  <define name="pub-id">
    <element name="pub-id">
      <ref name="pub-id-attlist"/>
      <optional><text/></optional>
    </element>
  </define>

  <define name="ref">
    <element name="ref">
      <ref name="ref-attlist"/>
      <oneOrMore>
        <ref name="element-citation"/>
      </oneOrMore>
    </element>
  </define>

  <define name="ref-list">
    <element name="ref-list">
      <ref name="ref-list-attlist"/>
      <zeroOrMore>
        <ref name="ref"/>
      </zeroOrMore>
    </element>
  </define>

  <!--
    Change:
      - removed <ext-link> as it is an annotation

    TODO: add transformation; use <email> or <uri> instead
  -->
  <define name="references.class">
    <choice>
      <ref name="annotation"/>
      <ref name="article-title"/>
      <ref name="chapter-title"/>
      <ref name="collab"/>
      <ref name="collab-alternatives"/>
      <ref name="comment"/>
      <ref name="conf-acronym"/>
      <ref name="conf-date"/>
      <ref name="conf-loc"/>
      <ref name="conf-name"/>
      <ref name="conf-sponsor"/>
      <ref name="data-title"/>
      <ref name="date"/>
      <ref name="date-in-citation"/>
      <ref name="day"/>
      <ref name="edition"/>
      <ref name="email"/>
      <ref name="elocation-id"/>
      <ref name="etal"/>
      <ref name="ext-link"/>
      <ref name="fpage"/>
      <ref name="gov"/>
      <ref name="institution"/>
      <ref name="institution-wrap"/>
      <ref name="isbn"/>
      <ref name="issn"/>
      <ref name="issn-l"/>
      <ref name="issue"/>
      <ref name="issue-id"/>
      <ref name="issue-part"/>
      <ref name="issue-title"/>
      <ref name="lpage"/>
      <ref name="month"/>
      <ref name="name"/>
      <ref name="name-alternatives"/>
      <ref name="object-id"/>
      <ref name="page-range"/>
      <ref name="part-title"/>
      <ref name="patent"/>
      <ref name="person-group"/>
      <ref name="pub-id"/>
      <ref name="publisher-loc"/>
      <ref name="publisher-name"/>
      <ref name="role"/>
      <ref name="season"/>
      <ref name="series"/>
      <ref name="size"/>
      <ref name="source"/>
      <ref name="std"/>
      <ref name="string-name"/>
      <ref name="supplement"/>
      <ref name="trans-source"/>
      <ref name="trans-title"/>
      <ref name="uri"/>
      <ref name="version"/>
      <ref name="volume"/>
      <ref name="volume-id"/>
      <ref name="volume-series"/>
      <ref name="year"/>
    </choice>
  </define>

  <!-- WIP
    TODO: requirements needed

    Scielo uses this only in <article-meta> <front-stub>
  -->
  <define name="related-article">
    <element name="related-article">
      <ref name="related-article-attlist"/>
      <zeroOrMore>
        <ref name="related-article-elements"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="related-article-elements">
    <choice>
      <ref name="journal-id.class"/>
      <ref name="references.class"/>
    </choice>
  </define>

  <define name="related-object">
    <element name="related-object">
      <ref name="related-object-attlist"/>
      <zeroOrMore>
        <ref name="related-object-elements"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="related-object-elements">
    <choice>
      <ref name="citation-additions.class"/>
      <ref name="label.class"/>
      <ref name="references.class"/>
    </choice>
  </define>



  <!--
    This simplification is inspired by SciELO's guideline

    - it contains one or more <sig> elements
    - within <sig>, text, <bold>, and <italic> can be used,
      and <break> to separate lines. Extra whitespace is not considered.
    - persons, and contributors must be defined in <front>

    <sig-block>
     <sig>
       <bold>Harry Weasley</bold>
       <break/>
       <italic>Editor Chefe</italic>
       <break/>
       Profeta Diário
       <break/>
     </sig>
    </sig-block>
  -->
  <define name="sig-block">
    <element name="sig-block">
      <ref name="sig-block-attlist"/>
      <oneOrMore>
        <ref name="sig"/>
      </oneOrMore>
    </element>
  </define>
  <define name="sig">
    <element name="sig">
      <ref name="sig-attlist"/>
      <zeroOrMore>
        <choice>
          <text/>
          <ref name="simple-phrase"/>
          <ref name="break"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>

  <!--
    We don't want <fn> be defined inline. Instead they should be defined in a <fn-group>

    TODO: we would even prefer to have only one <fn-group> for the whole document, but maybe this goes to far.
  -->
  <define name="simple-link.class">
    <choice>
      <!-- <ref name="fn"/> -->
      <ref name="target"/>
      <ref name="xref"/>
    </choice>
  </define>

  <!--
    - Don't use math directly. Use inline-formula or chem-struct instead
    - Don't define related-article or related-object inline; define them in front
      and use <xref> to link to them
  -->
  <define name="simple-phrase">
    <choice>
      <!-- <ref name="address-link.class"/> -->
      <ref name="ext-link"/>
      <!-- <ref name="article-link.class"/> -->
      <ref name="inline-supplementary-material"/>
      <ref name="emphasis.class"/>
      <ref name="inline-display.class"/>
      <ref name="inline-math.class"/>
      <!-- <ref name="math.class"/> -->
      <ref name="phrase.class"/>
      <ref name="simple-link.class"/>
      <ref name="subsup.class"/>
    </choice>
  </define>

  <!--
    WIP: for now we only allow plain text
  -->
  <define name="source">
    <element name="source">
      <ref name="source-attlist"/>
      <optional><text/></optional>
    </element>
  </define>

  <define name="object-id">
    <element name="object-id">
      <ref name="object-id-attlist"/>
      <optional><text/></optional>
    </element>
  </define>

  <!--
    Just use plain text. If you want to add information about the person add a <contrib> to the front matter.

    Note: <speech> is probably not used in scientific publications.
  -->
  <define name="speaker-elements">
    <choice>
      <ref name="simple-phrase"/>
    </choice>
  </define>

  <define name="string-conf">
    <element name="string-conf">
      <ref name="string-conf-attlist"/>
      <zeroOrMore>
        <choice>
          <text/>
          <!-- <ref name="string-conf-elements"/> -->
        </choice>
      </zeroOrMore>
    </element>
  </define>

  <!--
    Should really contain only string.
    This tag should only used for cases, where the date can not be expressed
    in a structured way.
  -->
  <define name="string-date">
    <element name="string-date">
      <ref name="string-date-attlist"/>
      <zeroOrMore>
        <choice>
          <text/>
          <!-- <ref name="string-date-elements"/> -->
        </choice>
      </zeroOrMore>
    </element>
  </define>

  <define name="string-name">
    <element name="string-name">
      <ref name="string-name-attlist"/>
      <zeroOrMore>
        <choice>
          <text/>
          <!-- <ref name="string-name-elements"/> -->
          <ref name="simple-text"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>

  <!--
    Do not mix block-level content and text.
  -->
  <define name="styled-content">
    <element name="styled-content">
      <ref name="styled-content-attlist"/>
      <choice>
        <zeroOrMore>
          <choice>
            <text/>
            <ref name="emphasis.class"/>
            <ref name="inline-display-noalt.class"/>
            <ref name="inline-math.class"/>
            <ref name="phrase.class"/>
            <ref name="simple-link.class"/>
            <ref name="subsup.class"/>
            <ref name="inline-supplementary-material"/>
          </choice>
        </zeroOrMore>
        <zeroOrMore>
          <choice>
            <ref name="address-link.class"/>
            <!-- <ref name="article-link.class"/> -->
            <ref name="block-display.class"/>
            <ref name="block-math.class"/>
            <ref name="list.class"/>
            <ref name="rest-of-para.class"/>
          </choice>
        </zeroOrMore>
      </choice>
    </element>
  </define>

  <define name="table-wrap">
    <element name="table-wrap">
      <ref name="table-wrap-attlist"/>
      <!-- We allow only one object-id[pub-id-type=doi] -->
      <optional><ref name="object-id"/></optional>
      <optional>
        <ref name="label"/>
      </optional>
      <optional>
        <ref name="caption"/>
      </optional>
      <ref name="table"/>
    </element>
  </define>

  <!--
    WIP: disabled direct use of math as opposed to
    <inline-formula> and <chem-struct>, etc.
  -->
  <define name="textual-form-elements">
    <choice>
      <ref name="emphasis.class"/>
      <ref name="inline-display-noalt.class"/>
      <!-- <ref name="math.class"/> -->
      <ref name="phrase-content.class"/>
      <ref name="subsup.class"/>
    </choice>
  </define>

  <define name="title">
    <element name="title">
      <ref name="title-attlist"/>
      <zeroOrMore>
        <choice>
          <text/>
          <choice>
            <ref name="simple-phrase"/>
            <ref name="break.class"/>
            <!-- <ref name="citation.class"/> -->
          </choice>
        </choice>
      </zeroOrMore>
    </element>
  </define>

  <define name="volume">
    <element name="volume">
      <ref name="volume-attlist"/>
      <optional><text/></optional>
    </element>
  </define>

  <define name="year">
    <element name="year">
      <optional><text/></optional>
    </element>
  </define>

  <!--
    Reproducible Elements
    ======================================================================
  -->

  <define name="cell">
    <element name="cell">
      <ref name="source-code"/>
      <ref name="output"/>
    </element>
  </define>

  <define name="source-code">
    <element name="source-code">
      <optional><text/></optional>
    </element>
  </define>

  <define name="output">
    <element name="output">
      <optional><text/></optional>
    </element>
  </define>

  <define name="repro-fig">
    <element name="repro-fig">
      <ref name="fig-attlist"/>
      <!-- We allow only one object-id[pub-id-type=doi] -->
      <ref name="object-id"/>
      <ref name="title"/>
      <ref name="caption"/>
      <ref name="cell"/>
    </element>
  </define>

</grammar>
